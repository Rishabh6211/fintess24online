{"version":3,"sources":["webpack:///./src/app/auth/login/login.module.ts","webpack:///./src/app/auth/services/login.service.ts?6b74*","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/login/login-routing.module.ts","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"6.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\n\nimport { CustomFormsModule } from 'ng2-validation'\n\nimport { LoginComponent } from './login.component';\n\nimport { LoginService } from '../services/login.service';\n\nimport { LoginRoutingModule } from './login-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { MaterializeModule } from \"angular2-materialize\";\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SharedModule,\n        LoginRoutingModule,\n        CustomFormsModule,\n        MaterializeModule\n    ],\n    providers: [LoginService],\n    declarations: [LoginComponent]\n})\nexport class LoginModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/login/login.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map'\n\nimport tsConstants = require('../../shared/config/tsconstant');\nimport { SharedService } from '../../shared/services/shared.service';\n@Injectable()\nexport class LoginService {\n    \n    private _host = tsConstants.HOST;\n\n\tconstructor( private _http: Http, private _sharedService: SharedService ) { }\n\n    public login( user ) {\n\n    \tlet headers           = new Headers();\n        \n        let email:string   = user.email;\n        let password:string   = user.password;\n        \n        headers.append('Content-Type', 'application/json');\n\n        let body = {\n            'email': email,\n            'password': password,            \n            \n        }\n\n        return this._http.post(this._host +'/auth/login', body, { headers: headers }).map((res:Response) => res.json())\n    }\n    forgotPassword(emailID) {\n\n       let headers        = new Headers();\n       let email:string   = emailID;\n        \n       return this._http.post(this._host +'/userForgotPassword', {email : email}, { headers: headers }).map((res:Response) => res.json())\n   }\n   resetPassword(user, userID){\n     console.log(\"user\",user);\n        // userID  = this._sharedService.getCurrentUserID();\n        console.log( userID )\n\n        let headers                 = new Headers();\n        \n        let newPassword:string      = user.newPassword;\n        let confirmPassword:string  = user.confirmPassword;\n\n         headers.append('Content-Type', 'application/json');\n\n        let body = {\n            'newPassword': newPassword,\n            'confirmPassword': confirmPassword                       \n        }\n        console.log(\"body\",body);\n        return this._http.post(this._host +'/changepassword/'+userID, body, { headers: headers }).map((res:Response) => res.json())\n \n\n   }\n    \n}/* class ends. */\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/services/login.service.ts","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { AuthService } from \"angular2-social-login\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ChangeDetectorRef } from '@angular/core';\n\nimport { LoginService } from '../services/login.service';\nimport { CookieService } from 'ngx-cookie';\nimport { FlashMessagesService } from 'ngx-flash-messages';\n\nimport {MaterializeDirective, MaterializeAction} from \"angular2-materialize\";\nimport * as Materialize from \"angular2-materialize\";\n\nimport tsConstants = require('../../shared/config/tsconstant');\n\n\n\n\nimport { SharedService } from '../../shared/services/shared.service';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    providers: [LoginService]    \n})\nexport class LoginComponent implements OnInit, OnDestroy {\n    \n\n   \tpublic user;\n  \tpublic sub: any;\n    public loginForm:object;\n\n    public isloading: boolean   = false;\n    public isError: boolean     = false;\n    public isSuccess: boolean     = false;\n    public errorMessage: string = '';\n\n    public normalUser  = {};\n\n    public rememberMe = true;\n    public hasUser    = false;\n\n\n    // birthdate: any;\n\n    constructor(private _auth: AuthService, \n                private _loginService: LoginService,\n                private _router : Router,\n                private _cookieService: CookieService,\n                private _cd: ChangeDetectorRef,\n                private _flashMessagesService: FlashMessagesService,\n                private _sharedService: SharedService ) {\n\n               \n\n    }\n\n  \tngOnInit() {\n\n        this.checkRememberMe();\n        \n  \t} \n\n  \tngOnDestroy(){\n  \t}  \n  \n\n    login(): void {  \n        console.log(\"here\");\n\n\n        this.isError   = false;\n        this.isSuccess = false;        \n        \n        if(this.rememberMe) {\n            localStorage.setItem(\"remember\",this.normalUser[\"username\"]);\n        } else {\n            localStorage.removeItem('remember');\n            this.hasUser = false;\n        }  \n        \n        this.isloading = true;    \n                \n        this._loginService.login(this.normalUser).subscribe(res => { \n            this.isloading = false;\n            console.log(\"res\",res);\n            console.log(\"resid\",res.id);\n            console.log(res);\n            if( res.success ){\n                //redirect to home. \n                this._router.navigate(['']);                \n                 let tempData = {\n                        \"id\" : res.user[0].id,\n                      \n                        \"username\" :res.user[0].username,\n                        \"phone\" :res.user[0].idmobile,\n                        \"address\" :res.user[0].address,\n                        \"city\" :res.user[0].city,\n                        \"pincode\" :res.user[0].pincode,\n                        \"state\" :res.user[0].state,\n                        \"district\" :res.user[0].district,\n                      \n                        \"email\" :res.user[0].emaild\n                 };\n\n                console.log(\"tempdata\", tempData);\n                this.isloading = false;                \n                this._cookieService.put('token', res.token);\n\n                console.log(\"Token \", res.token); \n                \n                this._cookieService.putObject('userData', tempData);\n                this._cookieService.put('userId', tempData.id);\n                console.log(\"userID\",this._cookieService.put('userId', tempData.id))\n                this._cd.markForCheck(); \n\n                this._sharedService.showToast(('login_successful'), tsConstants.COLOR_SUCESS);\n                this._sharedService.redirectToReferer();\n            }else{\n                this._sharedService.showToast((\"WRONG_PASSWORD\"), tsConstants.COLOR_DANGER);\n                \n                //show error messgae.                 \n                this.isloading = false;\n                \n            }\n            this._cd.markForCheck(); \n        },\n        err => {\n            this.isloading = false;\n            this._sharedService.showToast((\"WRONG_PASSWORD\"), tsConstants.COLOR_DANGER);\n            // this._sharedService.checkAccessToken(err, false);\n        });\n    }\n  \n    checkRememberMe() {\n\n        if( localStorage.getItem(\"remember\") ) {\n            this.normalUser[\"username\"] = localStorage.getItem(\"remember\");\n            this.hasUser = true;\n        }\n    }\n\n  \n\n}/* class ends */\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/login/login.component.ts","import { NgModule } from '@angular/core';\nimport { Routes,RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    data: {\n      title: 'login'\n    }\n  }  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/login/login-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/login/login.component.scss\n// module id = 1497\n// module chunks = 6","module.exports = \"<app-loader [isloading]=\\\"isloading\\\"></app-loader>\\n<!-- <app-header [isloading]=\\\"isloading\\\"></app-header> -->\\n<!-- small banner-->\\n<breadcrumb [id]=\\\"'banner-crop'\\\" [class]=\\\"''\\\" [page]=\\\"'login'\\\"></breadcrumb>\\n<!-- small banner-->\\n\\n<!--Main layout-->\\n\\n<main class=\\\"login\\\">\\n  <div class=\\\"container-fluid\\\"> \\n    \\n    <!-- loginbox-->\\n    <div class=\\\"loginbox my-2\\\"> \\n      \\n      <!--Form without header-->\\n      \\n      <div class=\\\"text-center\\\">\\n        <h2>Login to your account</h2>\\n        <p>Dont have an account <a [routerLink]=\\\"['/register']\\\">Register</a></p>\\n      </div>\\n           <div class=\\\"card\\\">\\n\\n                <!--Header-->\\n\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"error-block\\\" *ngIf=\\\"isError\\\">\\n                        <p class=\\\"text-danger text-center\\\">\\n                            {{errorMessage}}\\n                        </p>\\n                    </div>\\n                    <div class=\\\"error-block\\\" *ngIf=\\\"isSuccess\\\">\\n                        <p class=\\\"text-success text-center\\\">\\n                            {{errorMessage}}\\n                        </p>\\n                    </div>\\n                    <form role=\\\"form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n                        <!--Body-->\\n                        <div class=\\\"md-form has-required\\\">\\n                            <label for=\\\"form2\\\" [ngClass]=\\\"{'active': hasUser}\\\">Email</label>\\n                            <i class=\\\"fa fa-envelope prefix\\\"></i>\\n                            <input type=\\\"email\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"normalUser.email\\\" id=\\\"form2\\\" class=\\\"form-control\\\" email required />\\n\\n                            <div class=\\\"error-block\\\">\\n                                <small *ngIf=\\\"username.errors?.required && username.touched\\\" class=\\\"text-danger\\\">\\n                                    Email is required\\n                                </small>\\n                                <small *ngIf=\\\"username.errors?.email && username.touched\\\" class=\\\"text-danger\\\">\\n                                    Email is not valid\\n                                </small>\\n                            </div>\\n\\n                        </div>\\n\\n                        <div class=\\\"md-form has-required\\\">\\n                            <label for=\\\"form4\\\" [ngClass]=\\\"{'active': hasUser}\\\">Password</label>\\n                            <i class=\\\"fa fa-lock prefix\\\"></i>\\n                            <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"normalUser.password\\\" id=\\\"form4\\\" class=\\\"form-control\\\" required />\\n                            <div class=\\\"error-block\\\">\\n                                <small *ngIf=\\\"password.errors?.required && password.touched\\\" class=\\\"text-danger\\\">\\n                                    password is required\\n                                </small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <button class=\\\"btn btn-success signin\\\" [disabled]=\\\"!loginForm.valid\\\">login</button>\\n                            </div>\\n\\n                            <div class=\\\"col-md-6\\\">\\n                                <p class=\\\"forgotpswd pull-right\\\"><a [routerLink]=\\\"['/forgotpassword']\\\">Forgot password</a></p>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-12 col-12 md-form\\\">\\n                                <div class=\\\"custome-check loginpage\\\">\\n                                    <input [(ngModel)]=\\\"rememberMe\\\" id=\\\"option5\\\" name=\\\"status\\\" type=\\\"checkbox\\\" ng-reflect-name=\\\"status\\\" class=\\\"ng-valid ng-dirty ng-touched\\\">\\n                                    <label for=\\\"option5\\\">Remember me</label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n              \\n         \\n        </div>\\n      </div>\\n      <!--/Form without header--> \\n      \\n      <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"signIn('facebook')\\\" class=\\\"btn btn-fb btn-lg btn-block waves-effect waves-light\\\"><i class=\\\"fa fa-facebook left\\\"></i><span>Login with <strong>Facebook</strong></span></button>\\n                    <button type=\\\"button\\\" (click)=\\\"signIn('google')\\\" class=\\\"btn btn-gplus btn-lg btn-block waves-effect waves-light\\\"><i class=\\\"fa fa-google-plus left\\\"></i><span>Login with <strong>Google+</strong></span></button>\\n                </div>\\n            </div> --> \\n      \\n    </div>\\n    <!-- loginbox--> \\n    \\n  \\n</main>\\n<!--/Main layout--> \\n\\n<!-- <app-footer></app-footer> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/login/login.component.html\n// module id = 1521\n// module chunks = 6"],"sourceRoot":""}